<?xml version="1.0"?>

 <!-- Tutto in metri-->
<robot name="ultron_robot" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:arg name="laser_enabled" default="false" />
  <xacro:arg name="laser_xyz" default="$(optenv HUSKY_LMS1XX_XYZ 0.2206 0.0 0.00635)" />
  <xacro:arg name="laser_rpy" default="$(optenv HUSKY_LMS1XX_RPY 0.0 0.0 0.0)" />

  <xacro:arg name="kinect_enabled" default="false" />
  <xacro:arg name="zed_enabled" default="true" />
  <!--<xacro:arg name="kinect_rpy" default="0 0.18 3.1415" />-->

  <xacro:arg name="imu_enabled" default="true" />

  <xacro:arg name="robot_namespace" default="/" />
  <xacro:arg name="urdf_extras" default="empty.urdf" />

  <!-- Included URDF/XACRO Files -->
<!--  <xacro:include filename="$(find ultron_description)/urdf/decorations.urdf.xacro" />-->
  <xacro:include filename="$(find ultron_description)/urdf/wheel.urdf.xacro" />

  <xacro:include filename="$(find ultron_description)/urdf/accessories/kinect_camera.urdf.xacro"/>
  <xacro:include filename="$(find ultron_description)/urdf/accessories/sick_lms1xx_mount.urdf.xacro"/>
  <xacro:include filename="$(find ultron_description)/urdf/accessories/sensor_arch.urdf.xacro"/>
  <xacro:include filename="$(find ur_description)/urdf/ur5.urdf.xacro" />
  <xacro:include filename="$(find ultron_description)/urdf/zed.urdf.xacro" />
  <xacro:include filename="$(find ultron_description)/urdf/imu.urdf.xacro" />

  <!-- Global properties -->
  <xacro:property name="path_meshes" value="package://ultron_description/meshes"/>
  <xacro:property name="M_PI" value="3.14159"/>
  <!-- Global properties -->


  <!-- Base Size -->
  <property name="base_x_size" value="0.45" />
  <property name="base_y_size" value="0.28" />
  <property name="base_z_size" value="0.012" />

  <!-- Border Side -->
  <property name="border_x_size" value="0.13" />
  <property name="border_y_size" value="0.06" />

  <!-- Top Plate -->
  <property name="top_plate_x_size" value="0.4" />
  <property name="top_plate_y_size" value="0.34" />
  <property name="top_plate_z_size" value="0.02" />
  <property name="top_plate_z_pos" value="0.14" />

  <!-- Verical bar Size -->
  <property name="bar_x_size" value="0.02" />
  <property name="bar_y_size" value="0.04" />
  <property name="bar_z_size" value="1" />


  <!-- Wheel Mounting Positions -->
  <!-- dimensione del perimetro di attacco delle ruote--> 
  <xacro:property name="wheelbase" value="0.29" />
  <xacro:property name="track" value="0.34" />
  <!-- distanza della ruota in verticale (Z) dal centro dell'asse --> 
  <xacro:property name="wheel_vertical_offset" value="-0.025" />

  <!-- Wheel Properties -->
  <xacro:property name="wheel_length" value="0.025" />
  <xacro:property name="wheel_radius" value="0.075" />

  <!-- KInect Properties -->
  <xacro:arg name="kinect_xyz" default="0 0 0.03" />
  <xacro:arg name="kinect_rpy" default="0 0 0" />

    <!-- Base link is the center of the robot's bottom plate -->
    <link name="base_link">
      <visual>
        <origin xyz="0 0 -${base_z_size/2}" rpy="0 0 0" />
        <geometry>
         <!-- <mesh filename="package://ultron_description/meshes/base_link.dae" />-->
              <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
        </geometry>
        <material name="red">
          <color rgba="1 0 0 1"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 ${base_z_size/2}" rpy="0 0 0" />
        <geometry>
         <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
        </geometry>
      </collision>
    </link>

    <!-- Pezzi laterali -->

    <link name="base_link_platform_left">
        <visual>
	        <origin xyz="0 0 -${base_z_size/2}" rpy="0 0 0" />
                <geometry>
                        <box size="${border_x_size} ${border_y_size} ${base_z_size}"/>
                </geometry>
                 <material name="red"/>
        </visual>
        <collision>
                <origin xyz="0 0 -${base_z_size/2}" rpy="0 0 0" />
                <geometry>
                         <box size="${border_x_size} ${border_y_size} ${base_z_size}"/>
                </geometry>
      </collision>
    </link>

    <joint name="base_link_platform_left_joint" type="fixed">
      <origin xyz="0 0.17 0" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="base_link_platform_left" />
    </joint>

    <link name="base_link_platform_right">
        <visual>
                <origin xyz="0 0 -${base_z_size/2}" rpy="0 0 0" />
                <geometry>
                        <box size="${border_x_size} ${border_y_size} ${base_z_size}"/>
                </geometry>
                 <material name="red"/>
        </visual>
        <collision>
                <origin xyz="0 0 -${base_z_size/2}" rpy="0 0 0" />
                <geometry>
                         <box size="${border_x_size} ${border_y_size} ${base_z_size}"/>
                </geometry>
      </collision>
    </link>

    <joint name="base_link_platform_right_joint" type="fixed">
      <origin xyz="0 -0.17 0" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="base_link_platform_right" />
    </joint>

   <!-- pezzo su -->

    <link name="top_plate_link">
        <visual>
                <origin xyz="0 0 -${top_plate_z_size/2}" rpy="0 0 0" />
                <geometry>
                        <box size="${top_plate_x_size} ${top_plate_y_size} ${top_plate_z_size}"/>
                </geometry>
                 <material name="gray">
		  <color rgba="0.5 0.5 0.5 1"/>
		</material>
        </visual>
        <collision>
                <origin xyz="0 0 -${top_plate_z_size/2}" rpy="0 0 0" />
                <geometry>
                         <box size="${top_plate_x_size} ${top_plate_y_size} ${top_plate_z_size}"/>
                </geometry>
      </collision>
    </link>

    <joint name="base_link_top_plate_link_joint" type="fixed">
      <origin xyz="0 0 ${top_plate_z_pos}" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="top_plate_link" />
    </joint>


    <!-- Base footprint is on the ground under the robot -->
    <link name="base_footprint"/>

    <joint name="base_footprint_joint" type="fixed">
      <origin xyz="0 0 ${wheel_vertical_offset - wheel_radius}" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="base_footprint" />
    </joint>

<!-- barra verticale -->

<link name="bar_link">
    <visual>
        <origin xyz="0 0 ${bar_z_size/2}" rpy="0 0 0" />
        <geometry>
              <box size="${bar_x_size} ${bar_y_size} ${bar_z_size}"/>
        </geometry>
        <material name="black">
          <color rgba="0 1 0 1"/>
        </material>
      </visual>
  </link>

  <joint name="bar_join" type="fixed">
    <!--<xacro:insert_block name="joint_pose"/>-->
    <parent link="base_link" />
    <child link="bar_link" />
    <origin xyz="${-base_x_size/2 + bar_x_size} 0 0" rpy="0 0 0" />
    <axis xyz="0 0 0" />
  </joint>

<!-- barra verticale -->

  <!-- ZED -->
  <xacro:zed_lidar parent="bar_link">
    <origin xyz="${-bar_x_size/2} 0 0.675" rpy="0 0 0" />
  </xacro:zed_lidar>
  <!-- ZED - END -->

    <!-- Interial link stores the robot's inertial information -->
    <link name="inertial_link">
      <inertial>
        <mass value="33.455" />
        <origin xyz="-0.08748 -0.00085 0.09947" />
        <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296" />
      </inertial>
    </link>

    <joint name="inertial_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="inertial_link" />
    </joint>

    <!-- IMU Link is the standard mounting position for the  IMU.-->
    <!-- Il sistena di asse e' diverso yaw = M_PI-->
    <xacro:if value="$(arg imu_enabled)">
       <!--<link name="imu_link">
                <visual>
                        <origin xyz="0 0 -0.015" rpy="0 0 0" />
                        <geometry>
                                <box size="0.03 0.03 0.03"/>
                        </geometry>
                         <material name="yellow">
                                <color rgba="1 1 0 1"/>
                         </material>
                </visual>
        </link>
        <joint name="imu_joint" type="fixed">
                <origin xyz="0 0 -${base_z_size + 0.01}" rpy="0 0 -${M_PI}" />
                <parent link="base_link" />
                <child link="imu_link" />
       </joint>-->
       <!-- IMU -->
        <xacro:imu parent="base_link">
         <!-- <origin xyz="0 0 0" rpy="0 ${M_PI/2} 0" /> -->
          <origin xyz="0 0 0" rpy="0  0 0" />
        </xacro:imu>
        <!-- IMU -->
       <gazebo reference="imu_link">
       </gazebo>
   </xacro:if>

    <!-- Ultron wheel macros -->
    <xacro:ultron_wheel wheel_prefix="front_left">
      <origin xyz="${wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:ultron_wheel>
    <xacro:ultron_wheel wheel_prefix="front_right">
      <origin xyz="${wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:ultron_wheel>
    <xacro:ultron_wheel wheel_prefix="rear_left">
      <origin xyz="${-wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:ultron_wheel>
    <xacro:ultron_wheel wheel_prefix="rear_right">
      <origin xyz="${-wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:ultron_wheel>

   <!-- <xacro:ultron_decorate />-->

    <xacro:if value="$(arg laser_enabled)">

      <sick_lms1xx_mount prefix="base" topic="scan"/>

      <joint name="laser_mount_joint" type="fixed">
        <origin xyz="$(optenv ultron_LMS1XX_XYZ 0.2206 0.0 0.00635)"
                rpy="$(optenv ultron_LMS1XX_RPY 0.0 0.0 0.0)" />
        <parent link="top_plate_link" />
        <child link="base_laser_mount" />
      </joint>

    </xacro:if>

    <xacro:if value="$(arg kinect_enabled)">

   <!-- <xacro:sensor_arch prefix="" parent="top_plate_link">
      <origin xyz="0 0 0" rpy="0 0 -3.14"/>
    </xacro:sensor_arch>-->

    <joint name="kinect_frame_joint" type="fixed">
      <origin xyz="$(arg kinect_xyz)" rpy="$(arg kinect_rpy)" />
      <parent link="top_plate_link"/>
      <child link="camera_link"/>
    </joint>

    <xacro:kinect_camera prefix="camera" robot_namespace="$(arg robot_namespace)"/>
  </xacro:if>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <updateRate>40</updateRate>
      <bodyName>base_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>navsat/fix</topicName>
      <velocityTopicName>navsat/vel</velocityTopicName>
      <referenceLatitude>49.9</referenceLatitude>
      <referenceLongitude>8.9</referenceLongitude>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>0.0001 0.0001 0.0001</drift>
    </plugin>
  </gazebo>


</robot>
